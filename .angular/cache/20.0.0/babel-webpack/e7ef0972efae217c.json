{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, input } from '@angular/core';\nlet ArtistsComponent = class ArtistsComponent {\n  artists = input.required();\n  imageIndexes = [];\n  intervalId;\n  ngOnInit() {\n    const _artists = this.artists();\n    if (_artists) {\n      // Initialize imageIndexes for each artist\n      this.imageIndexes = _artists.map(() => 0);\n      // Start interval to rotate images\n      this.intervalId = setInterval(() => {\n        _artists.forEach((artist, i) => {\n          if (artist.imagePaths && artist.imagePaths.length > 1) {\n            this.imageIndexes[i] = (this.imageIndexes[i] + 1) % artist.imagePaths.length;\n          }\n        });\n      }, 4000);\n    }\n  }\n  ngOnDestroy() {\n    clearInterval(this.intervalId);\n  }\n  getArtistImage(artist, index) {\n    if (artist.imagePaths && artist.imagePaths.length > 0) {\n      return artist.imagePaths[this.imageIndexes[index]];\n    }\n    console.log(artist.imagePath);\n    return artist.imagePath || ''; // fallback\n  }\n};\nArtistsComponent = __decorate([Component({\n  selector: 'app-artists',\n  standalone: true,\n  templateUrl: './artists.component.html',\n  styleUrls: ['./artists.component.scss']\n})], ArtistsComponent);\nexport { ArtistsComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}